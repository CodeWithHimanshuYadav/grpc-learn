# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: file-validation.proto

require 'google/protobuf'

require 'google/protobuf/empty_pb'


descriptor_data = "\n\x15\x66ile-validation.proto\x12\x15\x46ileValidationPackage\x1a\x1bgoogle/protobuf/empty.proto\",\n\x08response\x12\x0f\n\x07isValid\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\"#\n\x10greetingResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"U\n\x13validateSizeRequest\x12-\n\x04\x66ile\x18\x01 \x01(\x0b\x32\x1f.FileValidationPackage.fileType\x12\x0f\n\x07maxSize\x18\x02 \x01(\x05\"b\n\x17validateMimeTypeRequest\x12-\n\x04\x66ile\x18\x01 \x01(\x0b\x32\x1f.FileValidationPackage.fileType\x12\x18\n\x10\x61llowedMimeTypes\x18\x02 \x03(\t\"I\n\x08\x66ileType\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08mimeType\x18\x03 \x01(\t\x12\x0c\n\x04size\x18\x04 \x01(\x05\x32\xa7\x02\n\x0e\x46ileValidation\x12[\n\x0cvalidateSize\x12*.FileValidationPackage.validateSizeRequest\x1a\x1f.FileValidationPackage.response\x12g\n\x14validateFileMimeType\x12..FileValidationPackage.validateMimeTypeRequest\x1a\x1f.FileValidationPackage.response\x12O\n\x0chelloService\x12\x16.google.protobuf.Empty\x1a\'.FileValidationPackage.greetingResponseb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module FileValidationPackage
  Response = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("FileValidationPackage.response").msgclass
  GreetingResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("FileValidationPackage.greetingResponse").msgclass
  ValidateSizeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("FileValidationPackage.validateSizeRequest").msgclass
  ValidateMimeTypeRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("FileValidationPackage.validateMimeTypeRequest").msgclass
  FileType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("FileValidationPackage.fileType").msgclass
end
